---
#
# Step 1 - Install JDK
#
- name: Copy JDK installer to remote machine
  win_get_url:
    url: "{{ jdk_url }}"        
    dest: "{{ ansible_env.TEMP }}\\openjdk-{{ jdk_ver }}.zip"

- name: Unzip JDK
  win_unzip:
    src: "{{ ansible_env.TEMP }}\\openjdk-{{ jdk_ver }}.zip"
    dest: "{{ jdk_install_dir }}"
    creates: "{{ ansible_env.TEMP }}\\openjdk-{{ jdk_ver }}"

- name: Add JAVA_HOME environment variable
  win_environment:
    state: present
    name: JAVA_HOME
    value: "{{ jdk_install_dir }}\\{{ jdk_ver }}"
    level: user

- name: Add JRE_HOME environment variable
  win_environment:
    state: present
    name: JRE_HOME
    value: "{{ jdk_install_dir }}\\{{ jdk_ver }}"
    level: user

- name: Add Java to PATH
  win_path:
    elements:
      - "{{ jdk_install_dir }}\\{{ jdk_ver }}\\bin"

  # Step 2 - Install Tomcat

- name: Download Apache Tomcat binary
  win_get_url:
    url: "{{tomcat_archive_url}}"
    dest: "{{ ansible_env.TEMP }}\\apache-tomcat-{{ tomcat_ver }}-windows-x64.zip"

- name: debug
  debug: 
    msg: "{{tomcat_archive_url}}"

- name: Unzip Apache Tomcat
  win_unzip:
    src: "{{ ansible_env.TEMP }}\\apache-tomcat-{{ tomcat_ver }}-windows-x64.zip"
    dest: "{{ tomcat_install_dir }}"
  args:
    creates: "{{ tomcat_install_dir }}\\apache-tomcat-{{ tomcat_ver }}"

- name: Set Tomcat environment variables
  ansible.builtin.win_environment:
    name: CATALINA_HOME
    value: "{{ tomcat_install_dir }}\\apache-tomcat-{{ tomcat_ver }}"
    state: present
    level: user

# TODO: make sure that playbook doesn't crash if service exists
#
- name: Install tomcat as a windows service
  win_command: "service.bat install {{ tomcat_service_name }}"
  args:
    chdir: "{{ tomcat_install_dir }}\\apache-tomcat-{{ tomcat_ver }}\\bin"

- name: Firewall rule to allow HTTP on 8080
  community.windows.win_firewall_rule:
    name: TOMCAT
    localport: 8080
    action: allow
    direction: in
    protocol: tcp
    state: present
    enabled: yes

- name: Start tomcat as windows service
  ansible.windows.win_service:
    name: "{{ tomcat_service_name }}"
    start_mode: manual
    state: started
    